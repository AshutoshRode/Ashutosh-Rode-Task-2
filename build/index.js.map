{"version":3,"file":"index.js","mappings":"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","sources":["webpack://ashutosh-rode/./src/index.scss","webpack://ashutosh-rode/external window \"React\"","webpack://ashutosh-rode/external window [\"wp\",\"blockEditor\"]","webpack://ashutosh-rode/external window [\"wp\",\"blocks\"]","webpack://ashutosh-rode/external window [\"wp\",\"components\"]","webpack://ashutosh-rode/external window [\"wp\",\"i18n\"]","webpack://ashutosh-rode/webpack/bootstrap","webpack://ashutosh-rode/webpack/runtime/compat get default export","webpack://ashutosh-rode/webpack/runtime/define property getters","webpack://ashutosh-rode/webpack/runtime/hasOwnProperty shorthand","webpack://ashutosh-rode/webpack/runtime/make namespace object","webpack://ashutosh-rode/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\r\nimport { useBlockProps, InspectorControls } from '@wordpress/block-editor';\r\n\r\n\r\nimport { PanelBody, ColorPalette, CheckboxControl } from '@wordpress/components';\r\nimport { __ } from '@wordpress/i18n';\r\n\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport './index.scss';\r\n\r\nconst colors = [\r\n    { name: 'Red', color: '#FF474C' },\r\n    { name: 'Green', color: '#90EE90' },\r\n\r\n    \r\n    { name: 'Purple', color: '#B19CD9' },\r\n    { name: 'Black', color: '#000' },\r\n    // { name: 'Orange', color: '#000' },\r\n\r\n    { name: 'Gray', color: '#D3D3D3' },\r\n];\r\n\r\nconst columns = ['id', 'fname', 'lname', 'email', 'date'];\r\n\r\nregisterBlockType('ashutosh-task/data-block', {\r\n    title: __('Ashutosh Rode Task - Display API Data', 'ashutosh-task'),\r\n\r\n    icon: 'database',\r\n    category: 'widgets',\r\n\r\n    attributes: {\r\n        tableBodyColor: { type: 'string', default: '#ade48e' },\r\n        textColor: { type: 'string', default: '#000' },\r\n\r\n        visibleColumns: { type: 'array', default: columns }\r\n    },\r\n\r\n    edit({ attributes, setAttributes }) {\r\n        const blockProps = useBlockProps();\r\n\r\n        const [data, setData] = useState(null);\r\n\r\n        useEffect(() => {\r\n            fetch('/wp-json/ashutosh-task/v1/fetch-data')\r\n                .then(response => response.json())\r\n                .then(setData)\r\n                .catch(error => console.error('Error fetching data:', error));\r\n        }, []);\r\n\r\n        const toggleColumn = (column) => {\r\n            const newColumns = attributes.visibleColumns.includes(column)\r\n                ? attributes.visibleColumns.filter(c => c !== column)\r\n                : [...attributes.visibleColumns, column];\r\n            setAttributes({ visibleColumns: newColumns });\r\n        };\r\n\r\n        return (\r\n            <div {...blockProps}>\r\n                <InspectorControls>\r\n                    <PanelBody title={__('Table Styles', 'ashutosh-task')}>\r\n                        <p>Table Body Color</p>\r\n\r\n                        <ColorPalette title={__('Table Body Color', 'ashutosh-task')}\r\n                            colors={colors}\r\n                            value={attributes.tableBodyColor}\r\n                            onChange={(color) => setAttributes({ tableBodyColor: color })}\r\n                        />\r\n                        <p>Text Color</p>\r\n                        <ColorPalette\r\n                            colors={colors}\r\n                            value={attributes.textColor}\r\n\r\n                            onChange={(color) => setAttributes({ textColor: color })}\r\n                        />\r\n\r\n                    </PanelBody>\r\n                    <PanelBody title={__('Column Visibility', 'ashutosh-task')}>\r\n                        {columns.map(column => (\r\n                            <CheckboxControl\r\n                                label={column}\r\n                                checked={attributes.visibleColumns.includes(column)}\r\n\r\n                                onChange={() => toggleColumn(column)}\r\n                            />\r\n                        ))}\r\n                    </PanelBody>\r\n                </InspectorControls>\r\n                {data ? (\r\n                    <table\r\n\r\n                        style={{ color: attributes.textColor, backgroundColor: attributes.tableBodyColor }} className=\"ashutosh-task-table\">\r\n                        <thead>\r\n\r\n\r\n                            <tr>{columns.filter(col => attributes.visibleColumns.includes(col)).map(col => <th key={col}>{col}</th>)}</tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Object.values(data.data.rows).map(row => (\r\n                                <tr key={row.id}>\r\n                                    {attributes.visibleColumns.includes('id') && <td>{row.id}</td>}\r\n                                    {attributes.visibleColumns.includes('fname') && <td>{row.fname}</td>}\r\n                                    \r\n                                    {/* {attributes.visibleColumns.includes('lname') && <td>{row.name}</td>} */}\r\n                                    \r\n                                    {attributes.visibleColumns.includes('lname') && <td>{row.lname}</td>}\r\n                                   \r\n                                   \r\n                                    {attributes.visibleColumns.includes('email') && <td>{row.email}</td>}\r\n                                    {attributes.visibleColumns.includes('date') && <td>{row.date}</td>}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                ) : (\r\n                    <p>Loading data from API...</p>\r\n                )}\r\n            </div>\r\n        );\r\n    },\r\n\r\n    save() {\r\n        \r\n        return null;\r\n    }\r\n});"],"names":["registerBlockType","useBlockProps","InspectorControls","PanelBody","ColorPalette","CheckboxControl","__","useEffect","useState","colors","name","color","columns","title","icon","category","attributes","tableBodyColor","type","default","textColor","visibleColumns","edit","setAttributes","blockProps","data","setData","fetch","then","response","json","catch","error","console","toggleColumn","column","newColumns","includes","filter","c","createElement","value","onChange","map","label","checked","style","backgroundColor","className","col","key","Object","values","rows","row","id","fname","lname","email","date","save"],"sourceRoot":""}